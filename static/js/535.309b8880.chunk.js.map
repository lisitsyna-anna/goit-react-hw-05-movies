{"version":3,"file":"static/js/535.309b8880.chunk.js","mappings":"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","sources":["components/RequestError/RequestError.styled.js","components/RequestError/RequestError.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","helpers/moviesMaper.js","services/moviesAPI.js","helpers/actorsMaper.js","helpers/reviewsMaper.js"],"sourcesContent":["import styled from 'styled-components';\nexport const StyledError = styled.h2`\n  margin-top: ${p => p.theme.space[5]}px;\n  color: red;\n  text-align: center;\n  font-size: ${p => p.theme.fontSizes.xl};\n`;\n","import { StyledError } from './RequestError.styled';\n\nconst RequestError = () => {\n  return (\n    <StyledError>Something went wrong... Try reloading the page</StyledError>\n  );\n};\n\nexport default RequestError;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  gap: ${p => p.theme.space[5]}px;\n  justify-content: center;\n`;\n\nexport const Input = styled.input`\n  padding: ${p => p.theme.space[3]}px;\n  width: 300px;\n\n  &:hover,\n  &:focus {\n    outline: none;\n    border-color: ${p => p.theme.colors.hoverColor};\n  }\n`;\n\nexport const SearchBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${p => p.theme.space[3]}px;\n  border: none;\n  padding-left: ${p => p.theme.space[5]}px;\n  padding-right: ${p => p.theme.space[5]}px;\n  background-color: ${p => p.theme.colors.accentColor};\n  color: ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.normal};\n  font-weight: 600;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.hoverColor};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { BsSearch } from 'react-icons/bs';\nimport { Form, Input, SearchBtn } from './SearchForm.styled';\n\nconst SearchForm = ({ onSubmit, value }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(e.target.elements.query.value);\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        name=\"query\"\n        defaultValue={value}\n        placeholder=\"Enter the title of the movie.\"\n      />\n      <SearchBtn type=\"submit\">\n        <BsSearch />\n        Search\n      </SearchBtn>\n    </Form>\n  );\n};\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nexport const SearchTitle = styled.h2`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${p => p.theme.space[4]}px;\n  margin-top: ${p => p.theme.space[6]}px;\n`;\n\nexport const MovieItem = styled.li`\n  flex-basis: calc((100% - 3 * 20px) / 4);\n  width: 100%;\n  border-radius: 5px;\n  transition-property: box-shadow, transform;\n  transition-duration: 200ms;\n  transition-timing-function: cubic-bezier(0.075, 0.82, 0.165, 1);\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: 0 0 20px -1px ${p => p.theme.colors.hoverColor};\n  }\n`;\n\nexport const MovieName = styled.p`\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: 600;\n`;\n\nexport const RealeseDate = styled.p`\n  font-size: ${p => p.theme.fontSizes.m};\n  margin-top: ${p => p.theme.space[2]}px;\n`;\n\nexport const MovieImg = styled.img`\n  width: 100%;\n  height: 398px;\n  object-fit: cover;\n  border-radius: 5px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\n\nimport SearchForm from 'components/SearchForm';\nimport { getMovieByQuery, IMAGE_URL } from 'services/moviesAPI';\n\nimport {\n  SearchTitle,\n  MoviesList,\n  MovieItem,\n  MovieImg,\n  MovieName,\n  RealeseDate,\n} from './Movies.styled';\nimport Container from 'components/Container';\nimport RequestError from 'components/RequestError';\n\nconst Movies = () => {\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!searchQuery) {\n      // toast('Enter a search term');\n      setSearchMovies([]);\n      return;\n    }\n\n    if (searchQuery.trim() === '' || searchQuery === '') {\n      toast.error('Enter valid word');\n      return;\n    }\n\n    getMovieByQuery(searchQuery.toLowerCase().trim())\n      .then(movies => {\n        setSearchMovies(movies);\n        if (movies.length === 0) {\n          toast.error('There are no movies for this search');\n        }\n        setError(null);\n      })\n      .catch(error => {\n        console.log(error.message);\n        setSearchMovies([]);\n        setError(error);\n      });\n  }, [searchQuery]);\n\n  const onSubmit = value => {\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n\n  return (\n    <main>\n      <section>\n        <SearchTitle>Search movies</SearchTitle>\n        <SearchForm onSubmit={onSubmit} value={searchQuery} />\n        {error && <RequestError />}\n        {searchMovies?.length > 0 && (\n          <MoviesList>\n            {searchMovies.map(({ id, title, posterPath, releaseDate }) => (\n              <MovieItem key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  <MovieImg\n                    src={\n                      posterPath\n                        ? IMAGE_URL + posterPath\n                        : 'https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-'\n                    }\n                    alt={title}\n                    loading=\"lazy\"\n                    width={250}\n                  />\n                  <Container as=\"div\" p={10}>\n                    <MovieName>{title}</MovieName>\n                    <RealeseDate>\n                      {new Date(releaseDate).getFullYear()}\n                    </RealeseDate>\n                  </Container>\n                </Link>\n              </MovieItem>\n            ))}\n          </MoviesList>\n        )}\n      </section>\n    </main>\n  );\n};\n\nexport default Movies;\n","export const moviesMaper = movies => {\n  return movies.map(\n    ({ id, title, poster_path: posterPath, release_date: releaseDate }) => ({\n      id,\n      title,\n      posterPath,\n      releaseDate,\n    })\n  );\n};\n","import axios from 'axios';\nimport { moviesMaper, actorsMaper, reviewsMaper } from '../helpers';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '723c3471611c46346c0c4849c0dae5f2';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\nconst TRENGING_PATH = '/trending/movie/day';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios(TRENGING_PATH, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return moviesMaper(data.results);\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  const {\n    title,\n    poster_path: posterPath,\n    release_date: releaseDate,\n    genres,\n    overview,\n    vote_average: voteAverage,\n  } = data;\n  return { title, posterPath, releaseDate, genres, overview, voteAverage };\n};\n\nexport const getCastsById = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return actorsMaper(data.cast);\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  return reviewsMaper(data.results);\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query,\n      page: 1,\n      include_adult: false,\n    },\n  });\n  return moviesMaper(data.results);\n};\n","export const actorsMaper = actors => {\n  return actors.map(({ id, name, profile_path: profilePath, character }) => ({\n    id,\n    name,\n    profilePath,\n    character,\n  }));\n};\n","export const reviewsMaper = reviews => {\n  return reviews.map(({ id, author, content }) => ({ id, author, content }));\n};\n"],"names":["StyledError","styled","p","theme","space","fontSizes","xl","Form","Input","colors","hoverColor","SearchBtn","accentColor","white","radii","normal","onSubmit","value","e","preventDefault","target","elements","query","type","name","defaultValue","placeholder","SearchTitle","MoviesList","MovieItem","MovieName","m","RealeseDate","MovieImg","useState","searchMovies","setSearchMovies","error","setError","useSearchParams","searchParams","setSearchParams","searchQuery","get","location","useLocation","useEffect","trim","getMovieByQuery","toLowerCase","then","movies","length","toast","catch","console","log","message","RequestError","map","id","title","posterPath","releaseDate","to","state","from","src","IMAGE_URL","alt","loading","width","Container","as","Date","getFullYear","moviesMaper","poster_path","release_date","axios","API_KEY","getTrendingMovies","params","api_key","data","results","getMovieById","movieId","language","genres","overview","voteAverage","vote_average","getCastsById","cast","profilePath","profile_path","character","getMovieReviews","page","author","content","include_adult"],"sourceRoot":""}