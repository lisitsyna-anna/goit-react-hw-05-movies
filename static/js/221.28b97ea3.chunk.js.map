{"version":3,"file":"static/js/221.28b97ea3.chunk.js","mappings":"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","sources":["components/RequestError/RequestError.styled.js","components/RequestError/RequestError.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","helpers/moviesMaper.js","services/moviesAPI.js","helpers/actorsMaper.js","helpers/reviewsMaper.js"],"sourcesContent":["import styled from 'styled-components';\nexport const StyledError = styled.h1`\n  color: red;\n`;\n","import { StyledError } from './RequestError.styled';\n\nconst RequestError = () => {\n  return (\n    <StyledError>Something went wrong... Try reloading the page</StyledError>\n  );\n};\n\nexport default RequestError;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-size: ${p => p.theme.fontSizes.xl};\n  margin-bottom: ${p => p.theme.space[4]}px;\n  text-align: center;\n`;\n\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${p => p.theme.space[4]}px;\n`;\n\nexport const MovieItem = styled.li`\n  flex-basis: calc((100% - 3 * 20px) / 4);\n  width: 100%;\n  border-radius: 5px;\n  transition-property: box-shadow, transform;\n  transition-duration: 200ms;\n  transition-timing-function: cubic-bezier(0.075, 0.82, 0.165, 1);\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: 0 0 20px -1px ${p => p.theme.colors.hoverColor};\n  }\n`;\n\nexport const MovieName = styled.p`\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: 600;\n`;\n\nexport const RealeseDate = styled.p`\n  font-size: ${p => p.theme.fontSizes.m};\n  margin-top: ${p => p.theme.space[2]}px;\n`;\n\nexport const MovieImg = styled.img`\n  width: 100%;\n  height: 398px;\n  object-fit: cover;\n  border-radius: 5px;\n`;\n","import Container from 'components/Container';\nimport RequestError from 'components/RequestError';\nimport { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { getTrendingMovies, IMAGE_URL } from 'services/moviesAPI';\n\nimport {\n  Title,\n  MoviesList,\n  MovieItem,\n  MovieName,\n  RealeseDate,\n  MovieImg,\n} from './Home.styled';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    getTrendingMovies()\n      .then(setTrendingMovies)\n      .catch(error => {\n        console.log(error.message);\n        setError(error.message);\n      });\n  }, []);\n\n  if (!trendingMovies) {\n    return;\n  }\n  return (\n    <main>\n      <Title>Trending today</Title>\n      {error && <RequestError />}\n      {trendingMovies.length > 0 && (\n        <MoviesList>\n          {trendingMovies.map(({ id, title, posterPath, releaseDate }) => (\n            <MovieItem key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <MovieImg\n                  src={\n                    posterPath\n                      ? IMAGE_URL + posterPath\n                      : 'https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-'\n                  }\n                  alt={title}\n                  loading=\"lazy\"\n                  width={250}\n                />\n                <Container as=\"div\" p={10}>\n                  <MovieName>\n                    {title ? title : 'There is no title here yet. '}\n                  </MovieName>\n                  <RealeseDate>\n                    {releaseDate ? new Date(releaseDate).getFullYear() : '---'}\n                  </RealeseDate>\n                </Container>\n              </Link>\n            </MovieItem>\n          ))}\n        </MoviesList>\n      )}\n    </main>\n  );\n};\n\nexport default Home;\n","export const moviesMaper = movies => {\n  return movies.map(\n    ({ id, title, poster_path: posterPath, release_date: releaseDate }) => ({\n      id,\n      title,\n      posterPath,\n      releaseDate,\n    })\n  );\n};\n","import axios from 'axios';\nimport { moviesMaper, actorsMaper, reviewsMaper } from '../helpers';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '723c3471611c46346c0c4849c0dae5f2';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\nconst TRENGING_PATH = '/trending/movie/day';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const { data } = await axios(TRENGING_PATH, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return moviesMaper(data.results);\n  } catch (error) {\n    console.log('Something wrong with API', error.message);\n  }\n};\n\nexport const getMovieById = async movieId => {\n  try {\n    const { data } = await axios(`/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    const {\n      title,\n      poster_path: posterPath,\n      release_date: releaseDate,\n      genres,\n      overview,\n      vote_average: voteAverage,\n    } = data;\n    return { title, posterPath, releaseDate, genres, overview, voteAverage };\n  } catch (error) {\n    console.log('Something wrong with API.', error.message);\n  }\n};\n\nexport const getCastsById = async movieId => {\n  try {\n    const { data } = await axios(`/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n    return actorsMaper(data.cast);\n  } catch (error) {\n    console.log('Something wrong with API.', error.message);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const { data } = await axios(`/movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n      },\n    });\n    return reviewsMaper(data.results);\n  } catch (error) {\n    console.log('Something wrong with API', error.message);\n  }\n};\n\nexport const getMovieByQuery = async query => {\n  try {\n    const { data } = await axios.get(`/search/movie`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        query,\n        page: 1,\n        include_adult: false,\n      },\n    });\n    return moviesMaper(data.results);\n  } catch (error) {\n    console.log('Something wrong with API', error.message);\n  }\n};\n","export const actorsMaper = actors => {\n  return actors.map(({ id, name, profile_path: profilePath, character }) => ({\n    id,\n    name,\n    profilePath,\n    character,\n  }));\n};\n","export const reviewsMaper = reviews => {\n  return reviews.map(({ id, author, content }) => ({ id, author, content }));\n};\n"],"names":["StyledError","styled","Title","p","theme","fontSizes","xl","space","MoviesList","MovieItem","colors","hoverColor","MovieName","m","RealeseDate","MovieImg","useState","trendingMovies","setTrendingMovies","error","setError","location","useLocation","useEffect","getTrendingMovies","then","catch","console","log","message","RequestError","length","map","id","title","posterPath","releaseDate","to","state","from","src","IMAGE_URL","alt","loading","width","Container","as","Date","getFullYear","moviesMaper","movies","poster_path","release_date","axios","API_KEY","params","api_key","data","results","getMovieById","movieId","language","genres","overview","voteAverage","vote_average","getCastsById","cast","name","profilePath","profile_path","character","getMovieReviews","page","author","content","getMovieByQuery","query","include_adult"],"sourceRoot":""}