{"version":3,"file":"static/js/387.10881bb6.chunk.js","mappings":"2QAEaA,EAAaC,EAAAA,GAAAA,GAAH,6EAGd,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGGC,EAAYJ,EAAAA,GAAAA,GAAH,iNAIH,SAAAC,GAAC,OAAIA,EAAEC,MAAMG,MAAMC,MAAlB,IAGPC,EAAWP,EAAAA,GAAAA,IAAH,gF,SC6CrB,EApDa,WACX,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAWA,OATAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaC,OAAOT,IACjBU,KAAKN,GACLO,OAAM,SAAAN,GACLO,QAAQC,IAAIR,EAAMS,SAClBR,EAASD,EACV,GACJ,GAAE,CAACL,IAECG,GAKH,gCACGE,IAAS,SAACU,EAAA,EAAD,KACV,SAACxB,EAAD,UACGY,EAAOa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,YAAaC,EAA1B,EAA0BA,UAA1B,OACV,UAACxB,EAAD,YACE,SAACG,EAAD,CACEsB,IACEF,EACIG,EAAAA,GAAYH,EACZ,4FAENI,IAAKL,EACLM,MAAO,OAET,UAACC,EAAA,EAAD,CACEC,GAAG,MACHjC,EAAG,GACHkC,QAAQ,OACRC,cAAc,SACdC,eAAe,gBALjB,WAOE,uBAAIX,KACJ,0BACE,sCADF,IACqBE,UAnBTH,EADN,SAPT,IAmCV,C,sECzDYa,E,QAActC,GAAAA,GAAH,uC,SCOxB,EANqB,WACnB,OACE,SAACsC,EAAD,4DAEH,C,2NCNYC,EAAc,SAAAC,GACzB,OAAOA,EAAOhB,KACZ,kBAAwE,CACtEC,GADF,EAAGA,GAEDgB,MAFF,EAAOA,MAGLC,WAHF,EAAcC,YAIZC,YAJF,EAAuCC,aAAvC,GAOH,ECNDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCACHjB,EAAY,kCAGZkB,EAAiB,mCAAG,gHAENF,EAAAA,EAAAA,GAJL,sBAI0B,CAC1CG,OAAQ,CACNC,QAASH,KAJgB,uBAErBI,EAFqB,EAErBA,KAFqB,kBAOtBZ,EAAYY,EAAKC,UAPK,gCAS7BhC,QAAQC,IAAI,2BAA4B,KAAMC,SATjB,yDAAH,qDAajB+B,EAAY,mCAAG,WAAM7C,GAAN,+GAEDsC,EAAAA,EAAAA,GAAM,UAAD,OAAWtC,GAAW,CAChDyC,OAAQ,CACNC,QAASH,EACTO,SAAU,WALU,uBAEhBH,EAFgB,EAEhBA,KAQNV,EAMEU,EANFV,MACaC,EAKXS,EALFR,YACcC,EAIZO,EAJFN,aACAU,EAGEJ,EAHFI,OACAC,EAEEL,EAFFK,SACcC,EACZN,EADFO,aAfsB,kBAiBjB,CAAEjB,MAAAA,EAAOC,WAAAA,EAAYE,YAAAA,EAAaW,OAAAA,EAAQC,SAAAA,EAAUC,YAAAA,IAjBnC,gCAmBxBrC,QAAQC,IAAI,4BAA6B,KAAMC,SAnBvB,yDAAH,sDAuBZN,EAAY,mCAAG,WAAMR,GAAN,mGAEDsC,EAAAA,EAAAA,GAAM,UAAD,OAAWtC,EAAX,YAA8B,CACxDyC,OAAQ,CACNC,QAASH,EACTO,SAAU,WALU,uBAEhBH,EAFgB,EAEhBA,KAFgB,kBAQLA,EAAKQ,KCnDZnC,KAAI,kBAAyD,CACzEC,GADgB,EAAGA,GAEnBC,KAFgB,EAAOA,KAGvBC,YAHgB,EAAaiC,aAI7BhC,UAJgB,EAAwCA,UAAxC,KD2CQ,gCAUxBR,QAAQC,IAAI,4BAA6B,KAAMC,SAVvB,yDAAH,sDAcZuC,EAAe,mCAAG,WAAMrD,GAAN,mGAEJsC,EAAAA,EAAAA,GAAM,UAAD,OAAWtC,EAAX,YAA8B,CACxDyC,OAAQ,CACNC,QAASH,EACTO,SAAU,QACVQ,KAAM,KANiB,uBAEnBX,EAFmB,EAEnBA,KAFmB,kBASPA,EAAKC,QElEZ5B,KAAI,kBAA8B,CAAEC,GAAhC,EAAGA,GAAiCsC,OAApC,EAAOA,OAAqCC,QAA5C,EAAeA,QAAf,KFyDU,gCAW3B5C,QAAQC,IAAI,2BAA4B,KAAMC,SAXnB,yDAAH,sDAef2C,EAAe,mCAAG,WAAMC,GAAN,kGAEJpB,EAAAA,EAAAA,IAAA,gBAA2B,CAChDG,OAAQ,CACNC,QAASH,EACTO,SAAU,QACVY,MAAAA,EACAJ,KAAM,EACNK,eAAe,KARQ,uBAEnBhB,EAFmB,EAEnBA,KAFmB,kBAWpBZ,EAAYY,EAAKC,UAXG,gCAa3BhC,QAAQC,IAAI,2BAA4B,KAAMC,SAbnB,yDAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/RequestError/RequestError.styled.js","components/RequestError/RequestError.jsx","helpers/moviesMaper.js","services/moviesAPI.js","helpers/actorsMaper.js","helpers/reviewsMaper.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ActorsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${p => p.theme.space[5]}px;\n`;\n\nexport const ActorItem = styled.li`\n  flex-basis: calc((100% - 3 * 20px) / 4);\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n  border-radius: ${p => p.theme.radii.normal};\n`;\n\nexport const ActorImg = styled.img`\n  width: 100%;\n  height: 398px;\n  object-fit: cover;\n`;\n","import Container from 'components/Container';\nimport RequestError from 'components/RequestError';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastsById, IMAGE_URL } from 'services/moviesAPI';\n\nimport { ActorsList, ActorItem, ActorImg } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getCastsById(Number(movieId))\n      .then(setActors)\n      .catch(error => {\n        console.log(error.message);\n        setError(error);\n      });\n  }, [movieId]);\n\n  if (!actors) {\n    return null;\n  }\n\n  return (\n    <>\n      {error && <RequestError />}\n      <ActorsList>\n        {actors.map(({ id, name, profilePath, character }) => (\n          <ActorItem key={id}>\n            <ActorImg\n              src={\n                profilePath\n                  ? IMAGE_URL + profilePath\n                  : 'https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-'\n              }\n              alt={name}\n              width={200}\n            />\n            <Container\n              as=\"div\"\n              p={10}\n              display=\"flex\"\n              flexDirection=\"column\"\n              justifyContent=\"space-between\"\n            >\n              <b>{name}</b>\n              <p>\n                <b>Character:</b> {character}\n              </p>\n            </Container>\n          </ActorItem>\n        ))}\n      </ActorsList>\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\nexport const StyledError = styled.h1`\n  color: red;\n`;\n","import { StyledError } from './RequestError.styled';\n\nconst RequestError = () => {\n  return (\n    <StyledError>Something went wrong... Try reloading the page</StyledError>\n  );\n};\n\nexport default RequestError;\n","export const moviesMaper = movies => {\n  return movies.map(\n    ({ id, title, poster_path: posterPath, release_date: releaseDate }) => ({\n      id,\n      title,\n      posterPath,\n      releaseDate,\n    })\n  );\n};\n","import axios from 'axios';\nimport { moviesMaper, actorsMaper, reviewsMaper } from '../helpers';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '723c3471611c46346c0c4849c0dae5f2';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\nconst TRENGING_PATH = '/trending/movie/day';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const { data } = await axios(TRENGING_PATH, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return moviesMaper(data.results);\n  } catch (error) {\n    console.log('Something wrong with API', error.message);\n  }\n};\n\nexport const getMovieById = async movieId => {\n  try {\n    const { data } = await axios(`/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    const {\n      title,\n      poster_path: posterPath,\n      release_date: releaseDate,\n      genres,\n      overview,\n      vote_average: voteAverage,\n    } = data;\n    return { title, posterPath, releaseDate, genres, overview, voteAverage };\n  } catch (error) {\n    console.log('Something wrong with API.', error.message);\n  }\n};\n\nexport const getCastsById = async movieId => {\n  try {\n    const { data } = await axios(`/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n    return actorsMaper(data.cast);\n  } catch (error) {\n    console.log('Something wrong with API.', error.message);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const { data } = await axios(`/movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n      },\n    });\n    return reviewsMaper(data.results);\n  } catch (error) {\n    console.log('Something wrong with API', error.message);\n  }\n};\n\nexport const getMovieByQuery = async query => {\n  try {\n    const { data } = await axios.get(`/search/movie`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        query,\n        page: 1,\n        include_adult: false,\n      },\n    });\n    return moviesMaper(data.results);\n  } catch (error) {\n    console.log('Something wrong with API', error.message);\n  }\n};\n","export const actorsMaper = actors => {\n  return actors.map(({ id, name, profile_path: profilePath, character }) => ({\n    id,\n    name,\n    profilePath,\n    character,\n  }));\n};\n","export const reviewsMaper = reviews => {\n  return reviews.map(({ id, author, content }) => ({ id, author, content }));\n};\n"],"names":["ActorsList","styled","p","theme","space","ActorItem","radii","normal","ActorImg","movieId","useParams","useState","actors","setActors","error","setError","useEffect","getCastsById","Number","then","catch","console","log","message","RequestError","map","id","name","profilePath","character","src","IMAGE_URL","alt","width","Container","as","display","flexDirection","justifyContent","StyledError","moviesMaper","movies","title","posterPath","poster_path","releaseDate","release_date","axios","API_KEY","getTrendingMovies","params","api_key","data","results","getMovieById","language","genres","overview","voteAverage","vote_average","cast","profile_path","getMovieReviews","page","author","content","getMovieByQuery","query","include_adult"],"sourceRoot":""}