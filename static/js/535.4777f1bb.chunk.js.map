{"version":3,"file":"static/js/535.4777f1bb.chunk.js","mappings":"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","sources":["components/RequestError/RequestError.styled.js","components/RequestError/RequestError.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","helpers/moviesMaper.js","services/moviesAPI.js","helpers/actorsMaper.js","helpers/reviewsMaper.js"],"sourcesContent":["import styled from 'styled-components';\nexport const StyledError = styled.h1`\n  color: red;\n`;\n","import { StyledError } from './RequestError.styled';\n\nconst RequestError = () => {\n  return (\n    <StyledError>Something went wrong... Try reloading the page</StyledError>\n  );\n};\n\nexport default RequestError;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  gap: ${p => p.theme.space[5]}px;\n  justify-content: center;\n`;\n\nexport const Input = styled.input`\n  padding: ${p => p.theme.space[3]}px;\n  width: 300px;\n\n  &:hover,\n  &:focus {\n    outline: none;\n    border-color: ${p => p.theme.colors.hoverColor};\n  }\n`;\n\nexport const SearchBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${p => p.theme.space[3]}px;\n  border: none;\n  padding-left: ${p => p.theme.space[5]}px;\n  padding-right: ${p => p.theme.space[5]}px;\n  background-color: ${p => p.theme.colors.accentColor};\n  color: ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.normal};\n  font-weight: 600;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.hoverColor};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { BsSearch } from 'react-icons/bs';\nimport { Form, Input, SearchBtn } from './SearchForm.styled';\n\nconst SearchForm = ({ onSubmit, value }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(e.target.elements.query.value);\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        name=\"query\"\n        defaultValue={value}\n        placeholder=\"Enter the title of the movie.\"\n      />\n      <SearchBtn type=\"submit\">\n        <BsSearch />\n        Search\n      </SearchBtn>\n    </Form>\n  );\n};\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nexport const SearchTitle = styled.h2`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${p => p.theme.space[4]}px;\n  margin-top: ${p => p.theme.space[6]}px;\n`;\n\nexport const MovieItem = styled.li`\n  flex-basis: calc((100% - 3 * 20px) / 4);\n  width: 100%;\n  border-radius: 5px;\n  transition-property: box-shadow, transform;\n  transition-duration: 200ms;\n  transition-timing-function: cubic-bezier(0.075, 0.82, 0.165, 1);\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: 0 0 20px -1px ${p => p.theme.colors.hoverColor};\n  }\n`;\n\nexport const MovieName = styled.p`\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: 600;\n`;\n\nexport const RealeseDate = styled.p`\n  font-size: ${p => p.theme.fontSizes.m};\n  margin-top: ${p => p.theme.space[2]}px;\n`;\n\nexport const MovieImg = styled.img`\n  width: 100%;\n  height: 398px;\n  object-fit: cover;\n  border-radius: 5px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\n\nimport SearchForm from 'components/SearchForm';\nimport { getMovieByQuery, IMAGE_URL } from 'services/moviesAPI';\n\nimport {\n  SearchTitle,\n  MoviesList,\n  MovieItem,\n  MovieImg,\n  MovieName,\n  RealeseDate,\n} from './Movies.styled';\nimport Container from 'components/Container';\nimport RequestError from 'components/RequestError';\n\nconst Movies = () => {\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!searchQuery) {\n      // toast('Enter a search term');\n      setSearchMovies([]);\n      return;\n    }\n\n    if (searchQuery.trim() === '' || searchQuery === '') {\n      toast.error('Enter valid word');\n      return;\n    }\n\n    getMovieByQuery(searchQuery.toLowerCase().trim())\n      .then(movies => {\n        setSearchMovies(movies);\n        if (movies.length === 0) {\n          toast.error('There are no movies for this search');\n        }\n      })\n      .catch(error => {\n        console.log(error.message);\n        setError(error);\n      });\n  }, [searchQuery]);\n\n  const onSubmit = value => {\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n\n  return (\n    <main>\n      {error && <RequestError />}\n      <section>\n        <SearchTitle>Search movies</SearchTitle>\n        <SearchForm onSubmit={onSubmit} value={searchQuery} />\n        {searchMovies.length > 0 && (\n          <MoviesList>\n            {searchMovies.map(({ id, title, posterPath, releaseDate }) => (\n              <MovieItem key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  <MovieImg\n                    src={\n                      posterPath\n                        ? IMAGE_URL + posterPath\n                        : 'https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-'\n                    }\n                    alt={title}\n                    loading=\"lazy\"\n                    width={250}\n                  />\n                  <Container as=\"div\" p={10}>\n                    <MovieName>{title}</MovieName>\n                    <RealeseDate>\n                      {new Date(releaseDate).getFullYear()}\n                    </RealeseDate>\n                  </Container>\n                </Link>\n              </MovieItem>\n            ))}\n          </MoviesList>\n        )}\n      </section>\n    </main>\n  );\n};\n\nexport default Movies;\n","export const moviesMaper = movies => {\n  return movies.map(\n    ({ id, title, poster_path: posterPath, release_date: releaseDate }) => ({\n      id,\n      title,\n      posterPath,\n      releaseDate,\n    })\n  );\n};\n","import axios from 'axios';\nimport { moviesMaper, actorsMaper, reviewsMaper } from '../helpers';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '723c3471611c46346c0c4849c0dae5f2';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\nconst TRENGING_PATH = '/trending/movie/day';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const { data } = await axios(TRENGING_PATH, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return moviesMaper(data.results);\n  } catch (error) {\n    console.log('Something wrong with API', error.message);\n  }\n};\n\nexport const getMovieById = async movieId => {\n  try {\n    const { data } = await axios(`/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    const {\n      title,\n      poster_path: posterPath,\n      release_date: releaseDate,\n      genres,\n      overview,\n      vote_average: voteAverage,\n    } = data;\n    return { title, posterPath, releaseDate, genres, overview, voteAverage };\n  } catch (error) {\n    console.log('Something wrong with API.', error.message);\n  }\n};\n\nexport const getCastsById = async movieId => {\n  try {\n    const { data } = await axios(`/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n    return actorsMaper(data.cast);\n  } catch (error) {\n    console.log('Something wrong with API.', error.message);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const { data } = await axios(`/movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n      },\n    });\n    return reviewsMaper(data.results);\n  } catch (error) {\n    console.log('Something wrong with API', error.message);\n  }\n};\n\nexport const getMovieByQuery = async query => {\n  try {\n    const { data } = await axios.get(`/search/movie`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        query,\n        page: 1,\n        include_adult: false,\n      },\n    });\n    return moviesMaper(data.results);\n  } catch (error) {\n    console.log('Something wrong with API', error.message);\n  }\n};\n","export const actorsMaper = actors => {\n  return actors.map(({ id, name, profile_path: profilePath, character }) => ({\n    id,\n    name,\n    profilePath,\n    character,\n  }));\n};\n","export const reviewsMaper = reviews => {\n  return reviews.map(({ id, author, content }) => ({ id, author, content }));\n};\n"],"names":["StyledError","styled","Form","p","theme","space","Input","colors","hoverColor","SearchBtn","accentColor","white","radii","normal","onSubmit","value","e","preventDefault","target","elements","query","type","name","defaultValue","placeholder","SearchTitle","MoviesList","MovieItem","MovieName","fontSizes","m","RealeseDate","MovieImg","useState","searchMovies","setSearchMovies","error","setError","useSearchParams","searchParams","setSearchParams","searchQuery","get","location","useLocation","useEffect","trim","getMovieByQuery","toLowerCase","then","movies","length","toast","catch","console","log","message","RequestError","map","id","title","posterPath","releaseDate","to","state","from","src","IMAGE_URL","alt","loading","width","Container","as","Date","getFullYear","moviesMaper","poster_path","release_date","axios","API_KEY","getTrendingMovies","params","api_key","data","results","getMovieById","movieId","language","genres","overview","voteAverage","vote_average","getCastsById","cast","profilePath","profile_path","character","getMovieReviews","page","author","content","include_adult"],"sourceRoot":""}