{"version":3,"file":"static/js/779.3462f99f.chunk.js","mappings":"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","sources":["components/RequestError/RequestError.styled.js","components/RequestError/RequestError.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","helpers/moviesMaper.js","services/moviesAPI.js","helpers/actorsMaper.js","helpers/reviewsMaper.js"],"sourcesContent":["import styled from 'styled-components';\nexport const StyledError = styled.h2`\n  margin-top: ${p => p.theme.space[5]}px;\n  color: red;\n  text-align: center;\n  font-size: ${p => p.theme.fontSizes.xl};\n`;\n","import { StyledError } from './RequestError.styled';\n\nconst RequestError = () => {\n  return (\n    <StyledError>Something went wrong... Try reloading the page</StyledError>\n  );\n};\n\nexport default RequestError;\n","import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[6]}px;\n`;\n\nexport const Author = styled.p`\n  font-weight: 600;\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\n","import RequestError from 'components/RequestError';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/moviesAPI';\n\nimport { ReviewsList, Author } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId)\n      .then(reviews => {\n        setReviews(reviews);\n        setError(null);\n      })\n      .catch(error => {\n        console.log(error.message);\n        setError(error.message);\n        setReviews([]);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <RequestError />}\n      {reviews.length > 0 && !error && (\n        <ReviewsList>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <Author>Author: {author}</Author>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ReviewsList>\n      )}\n      {reviews.length === 0 && !error && (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","export const moviesMaper = movies => {\n  return movies.map(\n    ({ id, title, poster_path: posterPath, release_date: releaseDate }) => ({\n      id,\n      title,\n      posterPath,\n      releaseDate,\n    })\n  );\n};\n","import axios from 'axios';\nimport { moviesMaper, actorsMaper, reviewsMaper } from '../helpers';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '723c3471611c46346c0c4849c0dae5f2';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\nconst TRENGING_PATH = '/trending/movie/day';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios(TRENGING_PATH, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return moviesMaper(data.results);\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  const {\n    title,\n    poster_path: posterPath,\n    release_date: releaseDate,\n    genres,\n    overview,\n    vote_average: voteAverage,\n  } = data;\n  return { title, posterPath, releaseDate, genres, overview, voteAverage };\n};\n\nexport const getCastsById = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return actorsMaper(data.cast);\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  return reviewsMaper(data.results);\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query,\n      page: 1,\n      include_adult: false,\n    },\n  });\n  return moviesMaper(data.results);\n};\n","export const actorsMaper = actors => {\n  return actors.map(({ id, name, profile_path: profilePath, character }) => ({\n    id,\n    name,\n    profilePath,\n    character,\n  }));\n};\n","export const reviewsMaper = reviews => {\n  return reviews.map(({ id, author, content }) => ({ id, author, content }));\n};\n"],"names":["StyledError","styled","p","theme","space","fontSizes","xl","ReviewsList","Author","useState","reviews","setReviews","error","setError","movieId","useParams","useEffect","getMovieReviews","then","catch","console","log","message","RequestError","length","map","id","author","content","moviesMaper","movies","title","posterPath","poster_path","releaseDate","release_date","axios","API_KEY","IMAGE_URL","getTrendingMovies","params","api_key","data","results","getMovieById","language","genres","overview","voteAverage","vote_average","getCastsById","cast","name","profilePath","profile_path","character","page","getMovieByQuery","query","include_adult"],"sourceRoot":""}