{"version":3,"file":"static/js/656.84d74eb6.chunk.js","mappings":"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","sources":["components/RequestError/RequestError.styled.js","components/RequestError/RequestError.jsx","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","helpers/moviesMaper.js","services/moviesAPI.js","helpers/actorsMaper.js","helpers/reviewsMaper.js"],"sourcesContent":["import styled from 'styled-components';\nexport const StyledError = styled.h2`\n  margin-top: ${p => p.theme.space[5]}px;\n  color: red;\n  text-align: center;\n  font-size: ${p => p.theme.fontSizes.xl};\n`;\n","import { StyledError } from './RequestError.styled';\n\nconst RequestError = () => {\n  return (\n    <StyledError>Something went wrong... Try reloading the page</StyledError>\n  );\n};\n\nexport default RequestError;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: ${p => p.theme.colors.hoverColor};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nexport default BackLink;\n\nBackLink.propTypes = {\n  to: PropTypes.object.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Title = styled.h2`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n\nexport const MainSection = styled.section`\n  display: flex;\n  gap: ${p => p.theme.space[5]}px;\n`;\n\nexport const MovieName = styled.h3`\n  margin-bottom: ${p => p.theme.space[5]}px;\n`;\n\nexport const InfoList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: ${p => p.theme.space[6]}px;\n`;\n\nexport const AdditionalSection = styled.section`\n  padding-top: ${p => p.theme.space[6]}px;\n  padding-bottom: ${p => p.theme.space[6]}px;\n`;\n\nexport const AdditionalTitle = styled.h2`\n  font-size: ${p => p.theme.fontSizes.xl};\n  margin-bottom: ${p => p.theme.space[5]}px;\n`;\n\nexport const LinkList = styled.ul`\n  display: flex;\n  gap: ${p => p.theme.space[6]}px;\n  margin-bottom: ${p => p.theme.space[6]}px;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  padding-left: ${p => p.theme.space[4]}px;\n  padding-right: ${p => p.theme.space[4]}px;\n  padding-bottom: ${p => p.theme.space[3]}px;\n  padding-top: ${p => p.theme.space[3]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  font-weight: 600;\n  font-size: ${p => p.theme.fontSizes.l};\n\n  &.active {\n    background-color: ${p => p.theme.colors.hoverColor};\n    color: ${p => p.theme.colors.white};\n  }\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    background-color: ${p => p.theme.colors.hoverColor};\n    color: ${p => p.theme.colors.white};\n  }\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useLocation, useParams, Outlet } from 'react-router-dom';\nimport FadeLoader from 'react-spinners/ClipLoader';\nimport { getMovieById, IMAGE_URL } from 'services/moviesAPI';\n\nimport RequestError from 'components/RequestError';\nimport BackLink from 'components/BackLink';\nimport {\n  Title,\n  MainSection,\n  MovieName,\n  InfoList,\n  AdditionalSection,\n  AdditionalTitle,\n  LinkList,\n  StyledNavLink,\n} from './MovieDetails.styled';\nimport Container from 'components/Container';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    getMovieById(Number(movieId))\n      .then(movie => {\n        setMovie(movie);\n        setError(null);\n      })\n      .catch(error => {\n        console.log(error.message);\n        setError(error.message);\n        setMovie(null);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      <BackLink to={backLinkHref}>Go back</BackLink>\n      {!movie && error && <RequestError />}\n      {movie && (\n        <>\n          <MainSection>\n            <Title>Movie details</Title>\n            <img\n              src={\n                movie.posterPath\n                  ? IMAGE_URL + movie.posterPath\n                  : 'https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-'\n              }\n              alt={movie.title}\n              width={250}\n            />\n            <Container as=\"div\" display=\"flex\" flexDirection=\"column\">\n              <MovieName>\n                {movie.title ? movie.title : 'There is no title yet'} (\n                {new Date(movie.releaseDate).getFullYear()})\n              </MovieName>\n              <InfoList>\n                <li>\n                  <p>\n                    <b>User score: </b>\n                    {movie.voteAverage.toFixed(1)}\n                  </p>\n                </li>\n                <li>\n                  <p>\n                    <b>Overview:</b> {movie.overview}\n                  </p>\n                </li>\n                <li>\n                  <p>\n                    <b>Genres:</b>{' '}\n                    {movie.genres.map(genre => genre.name).join(', ')}\n                  </p>\n                </li>\n              </InfoList>\n            </Container>\n          </MainSection>\n\n          <AdditionalSection>\n            <AdditionalTitle>Additional information</AdditionalTitle>\n            <LinkList>\n              <li>\n                <StyledNavLink to=\"cast\" state={{ from: backLinkHref }}>\n                  Cast\n                </StyledNavLink>\n              </li>\n              <li>\n                <StyledNavLink to=\"reviews\" state={{ from: backLinkHref }}>\n                  Reviews\n                </StyledNavLink>\n              </li>\n            </LinkList>\n            <Suspense\n              fallback={\n                <FadeLoader\n                  color=\"#2196F3\"\n                  cssOverride={{\n                    display: 'block',\n                    margin: '0 auto',\n                  }}\n                  height={50}\n                  loading\n                  margin={0}\n                  width={5}\n                />\n              }\n            >\n              <Outlet />\n            </Suspense>\n          </AdditionalSection>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","export const moviesMaper = movies => {\n  return movies.map(\n    ({ id, title, poster_path: posterPath, release_date: releaseDate }) => ({\n      id,\n      title,\n      posterPath,\n      releaseDate,\n    })\n  );\n};\n","import axios from 'axios';\nimport { moviesMaper, actorsMaper, reviewsMaper } from '../helpers';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '723c3471611c46346c0c4849c0dae5f2';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\nconst TRENGING_PATH = '/trending/movie/day';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios(TRENGING_PATH, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return moviesMaper(data.results);\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  const {\n    title,\n    poster_path: posterPath,\n    release_date: releaseDate,\n    genres,\n    overview,\n    vote_average: voteAverage,\n  } = data;\n  return { title, posterPath, releaseDate, genres, overview, voteAverage };\n};\n\nexport const getCastsById = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return actorsMaper(data.cast);\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  return reviewsMaper(data.results);\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query,\n      page: 1,\n      include_adult: false,\n    },\n  });\n  return moviesMaper(data.results);\n};\n","export const actorsMaper = actors => {\n  return actors.map(({ id, name, profile_path: profilePath, character }) => ({\n    id,\n    name,\n    profilePath,\n    character,\n  }));\n};\n","export const reviewsMaper = reviews => {\n  return reviews.map(({ id, author, content }) => ({ id, author, content }));\n};\n"],"names":["StyledError","styled","p","theme","space","fontSizes","xl","StyledLink","Link","colors","hoverColor","to","children","size","Title","MainSection","MovieName","InfoList","AdditionalSection","AdditionalTitle","LinkList","StyledNavLink","NavLink","radii","normal","l","white","useState","movie","setMovie","error","setError","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","getMovieById","Number","then","catch","console","log","message","RequestError","src","posterPath","IMAGE_URL","alt","title","width","Container","as","display","flexDirection","Date","releaseDate","getFullYear","voteAverage","toFixed","overview","genres","map","genre","name","join","Suspense","fallback","color","cssOverride","margin","height","loading","moviesMaper","movies","id","poster_path","release_date","axios","API_KEY","getTrendingMovies","params","api_key","data","results","language","vote_average","getCastsById","cast","profilePath","profile_path","character","getMovieReviews","page","author","content","getMovieByQuery","query","include_adult"],"sourceRoot":""}