{"version":3,"file":"static/js/221.38f45777.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/RequestError/RequestError.styled.js","components/RequestError/RequestError.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","helpers/moviesMaper.js","services/moviesAPI.js","helpers/actorsMaper.js","helpers/reviewsMaper.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${p => p.theme.space[4]}px;\n`;\n\nexport const MovieItem = styled.li`\n  flex-basis: calc((100% - 3 * 20px) / 4);\n  width: 100%;\n  border-radius: 5px;\n  transition-property: box-shadow, transform;\n  transition-duration: 200ms;\n  transition-timing-function: cubic-bezier(0.075, 0.82, 0.165, 1);\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: 0 0 20px -1px ${p => p.theme.colors.hoverColor};\n  }\n`;\n\nexport const MovieName = styled.p`\n  font-size: ${p => p.theme.fontSizes.m};\n  font-weight: 600;\n`;\n\nexport const RealeseDate = styled.p`\n  font-size: ${p => p.theme.fontSizes.m};\n  margin-top: ${p => p.theme.space[2]}px;\n`;\n\nexport const MovieImg = styled.img`\n  width: 100%;\n  height: 398px;\n  object-fit: cover;\n  border-radius: 5px;\n`;\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { IMAGE_URL } from 'services/moviesAPI';\nimport Container from 'components/Container';\nimport {\n  MoviesListStyled,\n  MovieItem,\n  MovieName,\n  MovieImg,\n  RealeseDate,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies, location }) => {\n  return (\n    <MoviesListStyled>\n      {movies.map(({ id, title, posterPath, releaseDate }) => (\n        <MovieItem key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <MovieImg\n              src={\n                posterPath\n                  ? IMAGE_URL + posterPath\n                  : 'https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-'\n              }\n              alt={title}\n              loading=\"lazy\"\n              width={250}\n            />\n            <Container as=\"div\" p={10}>\n              <MovieName>\n                {title ? title : 'There is no title here yet. '}\n              </MovieName>\n              <RealeseDate>\n                {releaseDate ? new Date(releaseDate).getFullYear() : '---'}\n              </RealeseDate>\n            </Container>\n          </Link>\n        </MovieItem>\n      ))}\n    </MoviesListStyled>\n  );\n};\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      posterPath: PropTypes.string.isRequired,\n      releaseDate: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  location: PropTypes.object.isRequired,\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\nexport const StyledError = styled.h2`\n  margin-top: ${p => p.theme.space[5]}px;\n  color: red;\n  text-align: center;\n  font-size: ${p => p.theme.fontSizes.xl};\n`;\n","import { StyledError } from './RequestError.styled';\n\nconst RequestError = () => {\n  return (\n    <StyledError>Something went wrong... Try reloading the page</StyledError>\n  );\n};\n\nexport default RequestError;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-size: ${p => p.theme.fontSizes.xl};\n  margin-bottom: ${p => p.theme.space[4]}px;\n  text-align: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport RequestError from 'components/RequestError';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { Title } from './Home.styled';\n\nimport { getTrendingMovies } from 'services/moviesAPI';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    getTrendingMovies()\n      .then(trendingMovies => {\n        setTrendingMovies(trendingMovies);\n        setError(null);\n      })\n      .catch(error => {\n        console.log(error.message);\n        setError(error.message);\n        setTrendingMovies([]);\n      });\n  }, []);\n\n  return (\n    <main>\n      <Title>Trending today</Title>\n      {error && <RequestError />}\n      {trendingMovies?.length > 0 && (\n        <MoviesList movies={trendingMovies} location={location} />\n      )}\n    </main>\n  );\n};\n\nexport default Home;\n","export const moviesMaper = movies => {\n  return movies.map(\n    ({ id, title, poster_path: posterPath, release_date: releaseDate }) => ({\n      id,\n      title,\n      posterPath,\n      releaseDate,\n    })\n  );\n};\n","import axios from 'axios';\nimport { moviesMaper, actorsMaper, reviewsMaper } from '../helpers';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '723c3471611c46346c0c4849c0dae5f2';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\nconst TRENGING_PATH = '/trending/movie/day';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios(TRENGING_PATH, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return moviesMaper(data.results);\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  const {\n    title,\n    poster_path: posterPath,\n    release_date: releaseDate,\n    genres,\n    overview,\n    vote_average: voteAverage,\n  } = data;\n  return { title, posterPath, releaseDate, genres, overview, voteAverage };\n};\n\nexport const getCastsById = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return actorsMaper(data.cast);\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    },\n  });\n  return reviewsMaper(data.results);\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query,\n      page: 1,\n      include_adult: false,\n    },\n  });\n  return moviesMaper(data.results);\n};\n","export const actorsMaper = actors => {\n  return actors.map(({ id, name, profile_path: profilePath, character }) => ({\n    id,\n    name,\n    profilePath,\n    character,\n  }));\n};\n","export const reviewsMaper = reviews => {\n  return reviews.map(({ id, author, content }) => ({ id, author, content }));\n};\n"],"names":["MoviesListStyled","styled","p","theme","space","MovieItem","colors","hoverColor","MovieName","fontSizes","m","RealeseDate","MovieImg","movies","location","map","id","title","posterPath","releaseDate","to","state","from","src","IMAGE_URL","alt","loading","width","Container","as","Date","getFullYear","StyledError","xl","Title","useState","trendingMovies","setTrendingMovies","error","setError","useLocation","useEffect","getTrendingMovies","then","catch","console","log","message","RequestError","length","MoviesList","moviesMaper","poster_path","release_date","axios","API_KEY","params","api_key","data","results","getMovieById","movieId","language","genres","overview","voteAverage","vote_average","getCastsById","cast","name","profilePath","profile_path","character","getMovieReviews","page","author","content","getMovieByQuery","query","include_adult"],"sourceRoot":""}